{
	"name": "create-data-taxi",
	"properties": {
		"folder": {
			"name": "adls"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DevSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1ef083e6-6e1e-401c-88f5-b4c43d7ba21a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b812f629-6402-4f69-ab6a-880bd6a5c752/resourceGroups/rg-Youtube/providers/Microsoft.Synapse/workspaces/ws-syn-aletu/bigDataPools/DevSparkPool",
				"name": "DevSparkPool",
				"type": "Spark",
				"endpoint": "https://ws-syn-aletu.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DevSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print('ready')"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from azureml.opendatasets import NycTlcYellow\r\n",
					"from datetime import datetime\r\n",
					"from dateutil import parser\r\n",
					"\r\n",
					"start_date = parser.parse('2010-01-01') \r\n",
					"end_date = parser.parse('2021-12-31')\r\n",
					"\r\n",
					"data = NycTlcYellow(start_date=start_date, end_date=end_date)\r\n",
					"df = data.to_spark_dataframe()\r\n",
					"# Display 10 rows\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.count()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import lpad, col, month, year, dayofmonth\r\n",
					"from pyspark.sql.types import datetime, StringType"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.columns"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df_date = (df.select(\r\n",
					"    'vendorID',\r\n",
					"    'tpepPickupDateTime',\r\n",
					"    'tpepDropoffDateTime',\r\n",
					"    'passengerCount',\r\n",
					"    'tripDistance',\r\n",
					"    'puLocationId',\r\n",
					"    'doLocationId',\r\n",
					"    'startLon',\r\n",
					"    'startLat',\r\n",
					"    'endLon',\r\n",
					"    'endLat',\r\n",
					"    'rateCodeId',\r\n",
					"    'storeAndFwdFlag',\r\n",
					"    'paymentType',\r\n",
					"    'fareAmount',\r\n",
					"    'extra',\r\n",
					"    'mtaTax',\r\n",
					"    'improvementSurcharge',\r\n",
					"    'tipAmount',\r\n",
					"    'tollsAmount',\r\n",
					"    'totalAmount',\r\n",
					"    'puYear',\r\n",
					"    lpad(col('puMonth').cast(StringType()), 2, '0').alias('puMonth'),\r\n",
					"    lpad(dayofmonth('tpepPickupDateTime'), 2, '0').alias('puDay')\r\n",
					"                    )\r\n",
					"            )\r\n",
					"\r\n",
					"display(df_date.limit(5))\r\n",
					"df_date.printSchema()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"(df_date.write\r\n",
					".format('parquet')\r\n",
					".mode('overwrite')\r\n",
					".partitionBy('puYear', 'puMonth', 'puDay')\r\n",
					".save('abfss://yellowtaxi@datalakeytaletu.dfs.core.windows.net/nyc/parquet'))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"(df_date.write\r\n",
					".format('csv')\r\n",
					".mode('overwrite')\r\n",
					".partitionBy('puYear', 'puMonth', 'puDay')\r\n",
					".option('sep', '|')\r\n",
					".option('header', True)\r\n",
					".save('abfss://yellowtaxi@datalakeytaletu.dfs.core.windows.net/nyc/csv'))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"(df_date.write\r\n",
					".format('delta')\r\n",
					".mode('overwrite')\r\n",
					".partitionBy('puYear', 'puMonth', 'puDay')\r\n",
					".save('abfss://yellowtaxi@datalakeytaletu.dfs.core.windows.net/nyc/delta'))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"(df_date.write\r\n",
					".format('parquet')\r\n",
					".mode('overwrite')\r\n",
					".save('abfss://yellowtaxi@datalakeytaletu.dfs.core.windows.net/nyc/nonPartitionedParquet'))"
				],
				"execution_count": null
			}
		]
	}
}