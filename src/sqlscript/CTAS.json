{
	"name": "CTAS",
	"properties": {
		"folder": {
			"name": "dedicated-sql-pool/load-taxi-data"
		},
		"content": {
			"query": "-- https://learn.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/load-data-from-azure-blob-storage-using-copy\n-- guardo come e' stata creata questa tabella (e' usata per il caricamento dei dati quindi e' una round robin)\nCREATE TABLE [dbo].[Trip]\n(\n\t[DateID] [int] NOT NULL,\n\t[MedallionID] [int] NOT NULL,\n\t[HackneyLicenseID] [int] NOT NULL,\n\t[PickupTimeID] [int] NOT NULL,\n\t[DropoffTimeID] [int] NOT NULL,\n\t[PickupGeographyID] [int] NULL,\n\t[DropoffGeographyID] [int] NULL,\n\t[PickupLatitude] [float] NULL,\n\t[PickupLongitude] [float] NULL,\n\t[PickupLatLong] [varchar](50) NULL,\n\t[DropoffLatitude] [float] NULL,\n\t[DropoffLongitude] [float] NULL,\n\t[DropoffLatLong] [varchar](50) NULL,\n\t[PassengerCount] [int] NULL,\n\t[TripDurationSeconds] [int] NULL,\n\t[TripDistanceMiles] [float] NULL,\n\t[PaymentType] [varchar](50) NULL,\n\t[FareAmount] [money] NULL,\n\t[SurchargeAmount] [money] NULL,\n\t[TaxAmount] [money] NULL,\n\t[TipAmount] [money] NULL,\n\t[TollsAmount] [money] NULL,\n\t[TotalAmount] [money] NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n\nselect count(*) from [dbo].[Trip] -- 170,261,325\nselect top 10 * from [dbo].[Trip]\nselect min([DateID]) from [dbo].[Trip]\nselect count(distinct [PickupGeographyID]) from [dbo].[Trip] -- puo' essere una buona idea perche' voglio aggregare per posizione in una mia query\n\n-- allora la ricreo con una logica di distribuzione hash sulla [PickupGeographyID]\n-- CTAS\nCREATE TABLE [dbo].[Trip_hash_geo] WITH (\n\tDISTRIBUTION = HASH ([PickupGeographyID])\n\t,CLUSTERED COLUMNSTORE INDEX\n\t,PARTITION (\n\t\t[DateID] RANGE RIGHT FOR VALUES ('20130501', '20130901')\n\t)\n)\nAS\nSELECT * FROM [dbo].[Trip]\n\n-- (170,261,325 rows affected) Completion time: 2023-05-18T12:17:21.0448733+02:00\n\n-- verifico la distribuzione (presumo che la round robin sia meglio distribuita)\nDBCC PDW_SHOWSPACEUSED('[dbo].[Trip]');\n---\nDBCC PDW_SHOWSPACEUSED('[dbo].[Trip_hash_geo]');\n\n\n\n-- Verifico anche la dim geo:\nCREATE TABLE [dbo].[Geography]\n(\n\t[GeographyID] [int] NOT NULL,\n\t[ZipCodeBKey] [varchar](10) NOT NULL,\n\t[County] [varchar](50) NULL,\n\t[City] [varchar](50) NULL,\n\t[State] [varchar](50) NULL,\n\t[Country] [varchar](50) NULL,\n\t[ZipCode] [varchar](50) NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n-- allora la ricreo con una logica di distribuzione replicate in quanto tabella dimensionale\n-- prima verifico quanto pesa a livello di GB\nselect \n    table_name\n    ,sum(reserved_space_GB) as reserved_space_GB\n    ,sum(data_space_GB) as data_space_GB\nfrom dbo.vTableSizes\nwhere table_name = 'Geography'\ngroup by table_name;\n-- ok e' sufficientemente piccola per essere una replicate\n\n\n-- CTAS\nCREATE TABLE [dbo].[Geography_rep] WITH (\n\tDISTRIBUTION = REPLICATE\n\t,CLUSTERED COLUMNSTORE INDEX\n)\nAS\nSELECT * FROM [dbo].[Geography]\n\n\n\n-- confronto esecuzioni query\n-- fare 2 lanci per ognuna\nselect \n\t[DateID]\n\t,[ZipCode]\n\t,avg([TipAmount]) as AvgTip\n\t,avg([TripDistanceMiles]) as AvgDistance\n\t,avg([TripDurationSeconds]) as AvgDuration\n\t,avg([PassengerCount]) as AvgPassengers\nfrom \n\t[dbo].[Trip] as a\n\tinner join\n\t[dbo].[Geography] as b\n\ton a.[PickupGeographyID] = b.[GeographyID]\nwhere [DateID] < '20130401'\ngroup by [ZipCode], [DateID]\norder by [DateID] desc\noption (label = 'query-ctas-rr-1')\n\nSELECT * FROM sys.dm_pdw_exec_requests WHERE [LABEL] = 'query-ctas-rr-1';\nSELECT * FROM sys.dm_pdw_request_steps WHERE [request_id] = 'QID8129';\n\n-- fare 2 lanci per ognuna\nselect \n\t[DateID]\n\t,[ZipCode]\n\t,avg([TipAmount]) as AvgTip\n\t,avg([TripDistanceMiles]) as AvgDistance\n\t,avg([TripDurationSeconds]) as AvgDuration\n\t,avg([PassengerCount]) as AvgPassengers\nfrom \n\t[dbo].[Trip_hash_geo] as a\n\tinner join\n\t[dbo].[Geography_rep] as b\n\ton a.[PickupGeographyID] = b.[GeographyID]\nwhere [DateID] < '20130401'\ngroup by [ZipCode], [DateID]\norder by [DateID] desc\noption (label = 'query-ctas-hash-1')\n\nSELECT * FROM sys.dm_pdw_exec_requests WHERE [LABEL] = 'query-ctas-hash-1';\nSELECT * FROM sys.dm_pdw_request_steps WHERE [request_id] = 'QID8149';\n-- cosa notiamo? che non e' presente il broadcastmove operation ovvero la replica della tabella per effettuare la join\n\n-- cambio query\n-- fare 2 lanci per ognuna\nselect \n\t[ZipCode]\n\t,avg([TipAmount]) as AvgTip\n\t,avg([TripDistanceMiles]) as AvgDistance\n\t,avg([TripDurationSeconds]) as AvgDuration\n\t,avg([PassengerCount]) as AvgPassengers\nfrom \n\t[dbo].[Trip] as a\n\tinner join\n\t[dbo].[Geography] as b\n\ton a.[PickupGeographyID] = b.[GeographyID]\nwhere [DateID] < '20130401'\ngroup by [ZipCode]\noption (label = 'query2-ctas-rr2');\n\nSELECT * FROM sys.dm_pdw_exec_requests WHERE [LABEL] = 'query2-ctas-rr2';\nSELECT * FROM sys.dm_pdw_request_steps WHERE [request_id] = 'QID8362';\n\n\n-- fare 2 lanci per ognuna\nselect \n\t[ZipCode]\n\t,avg([TipAmount]) as AvgTip\n\t,avg([TripDistanceMiles]) as AvgDistance\n\t,avg([TripDurationSeconds]) as AvgDuration\n\t,avg([PassengerCount]) as AvgPassengers\nfrom \n\t[dbo].[Trip_hash_geo] as a\n\tinner join\n\t[dbo].[Geography_rep] as b\n\ton a.[PickupGeographyID] = b.[GeographyID]\nwhere [DateID] < '20130401'\ngroup by [ZipCode]\noption (label = 'query2-ctas-hash2')\n\nSELECT * FROM sys.dm_pdw_exec_requests WHERE [LABEL] = 'query2-ctas-hash2';\nSELECT * FROM sys.dm_pdw_request_steps WHERE [request_id] = 'QID8379';\n-- stesso risultato\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "devDedicatedSQLpool",
				"poolName": "devDedicatedSQLpool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}